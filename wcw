#!/usr/bin/perl

use strict;
use warnings;
use YAML::Tiny;
use LWP::Simple;



# Read directory with yaml files
opendir( my $dh, "./websites" ) || die "Can't open directory";
my @files = grep { ! /^\./ && /.*\.ya?ml$/ && -f "./websites/$_" } readdir $dh;
closedir $dh;


# Process each file
for my $file ( sort @files ) {

    print "Processing file $file...\n";

    # Strip ".yml" (or ".yaml) extension
    ( my $basefilename ) = $file =~ /^(.*)\.ya?ml$/;

    # Reading content of config file
    my $yaml = YAML::Tiny->read( "./websites/$file" );

    # Storing content
    my $content;

    if ( my $url = $yaml->[0]->{url} ) {
        # Url parameter was specified
        # Retrieve content of website
        $content = get( $url );
    } elsif ( my $cmd = $yaml->[0]->{cmd} ) {
        $content = qx/ $cmd /;
    } else {
        die "No URL specified";
    }

    my $old_content = "";
    my $old_filename = "./saved-content/$basefilename.dat";

    # Check if file with previous content exists
    if ( ! -f $old_filename ) {
        print "File '$old_filename' didn't exist.\n";
        # no further action
    } else {
        {
            # Read complete file
            local $/;
            open( my $old_fh, "<", $old_filename ) || die "Can't open file";
            $old_content = <$old_fh>;
            close $old_fh;
        }
    }

    # Compare old with current content
    if ( $old_content ne $content ) {
        # Something changed
        print "Content has changed.\n";

        # Store content
        open( my $old_fh, ">", $old_filename ) || die "Can't open output file";
        print $old_fh $content;
        close $old_fh;
    } else {
        print "No new content.\n";
    }

}
